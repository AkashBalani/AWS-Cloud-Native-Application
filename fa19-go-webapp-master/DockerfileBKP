FROM "golang:alpine"

MAINTAINER "Akshay Murgod <murgod.a@husky.neu.edu>"

# Tells Docker to create a working directory that the container will by default use for your project. When you docker -ti <image> it will check into this folder first
WORKDIR /go/src

# This command tells Docker to copy files from our local machine, into the container that is being built. In some cases we can choose to download our code from Github or any other source, for our case it is simple enough to just COPY the welcome-app to Docker. and place it in the WORKDIR mentioned earlier.
COPY src/ /go/src

RUN cd /go/src && go build -o main

# This tells Docker to expose a certain port that can be listened to. This is important since our application is exposing on Port 8080, we need Docker to also expose on this port so that external sources can interact with our app.
EXPOSE 8080:8080

# This is the first command to run once the container starts, turning it into an automatically running welcome-app server.
ENTRYPOINT "./main" --port 8080
